#!/usr/bin/gemstone/smalltalk
"
	Create a Rowan project from scratch, using array-based apis for sets of packages that have the same
		package attributes
"

	| projectName project projectHome |
	projectHome := '$ROWAN_PROJECTS_HOME/RowanSample8/home' asFileReference.
	projectName := 'Example03'.

	(projectHome / projectName) ensureDeleteAll.
	Rowan projectNamed: projectName ifPresent: [:project | project unload ].

	project := RwComponentProjectDefinition
		projectName: projectName 
			componentNamesToLoad: #( 'Core' )
			groupNamesToLoad: #( 'core' 'tests' )
			defaultComponentName: 'Core'
			defaultGroupName: 'core'
			packageFormat: 'tonel'
			projectHome: projectHome
			specsPath: 'rowan/specs'
			componentsPath: 'rowan/components'
			packagesPath: 'rowan/src'
			projectsPath: 'rowan/projects'
			useGit: true
			comment: 'Example project exposing the standard project creation api'.
	project
		addComponentNamed: 'Core'
			definedGroupNames: 
				(Dictionary new
					add: 'core'  -> {};
					add: 'tests' -> { 'core' };
					yourself)
			gemstoneDefaultSymbolDictionaryForUser: 'SystemUser' -> 'ExampleCore'
			comment: 'Primary component used for loading entire system.';
		addPackagesNamed: {'Example-Core1' . 'Example-Core2'}
			withConditions: { 'common' };
		addPackageNamed: 'Example-Tests'
			withConditions: { 'common' }
			andGroupName: 'tests';
		addPackageNamed: 'Example-GemStone-Extensions'
			toComponentNamed: 'Core'
			withConditions: { 'gemstone' }
			gemstoneDefaultSymbolDictionaryForUser: 'SystemUser' -> 'Globals';
		addPackageNamed: 'Example-GemStone-Test-Extensions'
			toComponentNamed: 'Core'
			withConditions: { 'gemstone' }
			andGroupName: 'tests'
			gemstoneDefaultSymbolDictionaryForUser: 'SystemUser' -> 'Globals';
		yourself.

	GsFile stdout 
		nextPutAll: projectHome asFileReference printString;
		lf

